# syntax=docker/dockerfile:1.6
# Multi-stage moderno. Doc: https://docs.docker.com/build/building/multi-stage/

##############################
# 1) Base: Node + pnpm (Corepack)
##############################
FROM node:22-alpine3.21 AS base
WORKDIR /app
# Usa Corepack (incluido en Node 22) para pnpm (evita npm -g pnpm)
# Corepack: https://nodejs.org/api/corepack.html
RUN corepack enable && corepack prepare pnpm@9 --activate

##############################
# 2) Deps: instala TODAS las deps (incluye dev) para poder compilar
##############################
FROM base AS deps
# Importante: aseguramos devDeps
ENV NODE_ENV=development
# Copia solo manifest/lock para maximizar caché
COPY package.json pnpm-lock.yaml ./
# Instala de forma reproducible (no usa dev=false por NODE_ENV)
# pnpm install: https://pnpm.io/cli/install
RUN pnpm install --frozen-lockfile

##############################
# 3) Build: compila y luego poda devDeps
##############################
FROM base AS build
ENV NODE_ENV=development
# Copia node_modules con devDeps resueltas
COPY --from=deps /app/node_modules ./node_modules
# Copia el resto del código (tsconfig, nest-cli.json, src, etc.)
COPY . .
# Compila (Nest CLI debe estar en devDependencies)
# Nest CLI: https://docs.nestjs.com/cli/overview
RUN pnpm run build

# Quita devDependencies: mantiene solo prod para la siguiente etapa
# pnpm prune: https://pnpm.io/cli/prune
RUN pnpm prune --prod

# (Opcional) limpia la store de pnpm en esta etapa (no viaja al runtime)
# pnpm store: https://pnpm.io/cli/store
RUN pnpm store prune || true

##############################
# 4) Runtime: mínimo para producción
##############################
FROM node:22-alpine3.21 AS runtime
WORKDIR /app
ENV NODE_ENV=production

# Usa el usuario no-root 'node' por seguridad
# Imagen oficial Node: https://hub.docker.com/_/node
USER node

# Copia solo lo necesario para ejecutar
COPY --chown=node:node --from=build /app/dist ./dist
COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node package.json ./

EXPOSE 3000
CMD ["node", "dist/main.js"]
